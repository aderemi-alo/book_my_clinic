// Mocks generated by Mockito 5.4.2 from annotations
// in book_my_clinic/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:book_my_clinic/models/appointment.dart' as _i10;
import 'package:book_my_clinic/models/doctor.dart' as _i12;
import 'package:book_my_clinic/models/patient.dart' as _i14;
import 'package:book_my_clinic/models/result.dart' as _i2;
import 'package:book_my_clinic/services/appointment_service.dart' as _i9;
import 'package:book_my_clinic/services/authentication_service.dart' as _i8;
import 'package:book_my_clinic/services/doctor_service.dart' as _i11;
import 'package:book_my_clinic/services/patient_service.dart' as _i13;
import 'package:flutter/material.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stacked_services/stacked_services.dart' as _i4;
import 'package:uuid/uuid.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUuid_1 extends _i1.SmartFake implements _i3.Uuid {
  _FakeUuid_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i4.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i5.GlobalKey<_i5.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i5.GlobalKey<_i5.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i4.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<T?>? navigateWithTransition<T>(
    _i5.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i5.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i4.Transition? transitionClass,
    _i4.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? replaceWithTransition<T>(
    _i5.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i5.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i4.Transition? transitionClass,
    _i4.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i5.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i5.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? navigateToView<T>(
    _i5.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i5.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i4.Transition? transition,
    _i4.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i5.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearStackAndShowView<T>(
    _i5.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearTillFirstAndShowView<T>(
    _i5.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i5.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i4.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i4.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i4.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i6.Future<_i4.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.SheetResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.SheetResponse<dynamic>?>);
  @override
  _i6.Future<_i4.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i7.Color? barrierColor = const _i7.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i6.Future<_i4.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i6.Future<_i4.SheetResponse<T>?>.value(),
      ) as _i6.Future<_i4.SheetResponse<T>?>);
  @override
  void completeSheet(_i4.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i4.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i4.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i5.Widget Function(
      _i5.BuildContext,
      _i4.DialogRequest<dynamic>,
      dynamic Function(_i4.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i7.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i7.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i4.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<dynamic>?>);
  @override
  _i6.Future<_i4.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i7.Color? barrierColor = const _i7.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i6.Future<_i4.DialogResponse<T>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<T>?>);
  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i7.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i7.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i4.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i4.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i8.AuthenticationService {
  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i2.Result<void>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<void>> signUp(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #signUp,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #signUp,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<void>> resetPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [email],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #resetPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #resetPassword,
            [email],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
}

/// A class which mocks [AppointmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppointmentService extends _i1.Mock
    implements _i9.AppointmentService {
  @override
  _i3.Uuid get uuid => (super.noSuchMethod(
        Invocation.getter(#uuid),
        returnValue: _FakeUuid_1(
          this,
          Invocation.getter(#uuid),
        ),
        returnValueForMissingStub: _FakeUuid_1(
          this,
          Invocation.getter(#uuid),
        ),
      ) as _i3.Uuid);
  @override
  set uuid(_i3.Uuid? _uuid) => super.noSuchMethod(
        Invocation.setter(
          #uuid,
          _uuid,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i2.Result<void>> createAppointment(
    String? doctorId,
    DateTime? dateTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAppointment,
          [
            doctorId,
            dateTime,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #createAppointment,
            [
              doctorId,
              dateTime,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #createAppointment,
            [
              doctorId,
              dateTime,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<void>> acceptAppointment(String? appointmentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptAppointment,
          [appointmentId],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #acceptAppointment,
            [appointmentId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #acceptAppointment,
            [appointmentId],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<void>> rejectAppointment(String? appointmentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectAppointment,
          [appointmentId],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #rejectAppointment,
            [appointmentId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #rejectAppointment,
            [appointmentId],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<void>> rescheduleAppointment(
    String? appointmentId,
    DateTime? newDateTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rescheduleAppointment,
          [
            appointmentId,
            newDateTime,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #rescheduleAppointment,
            [
              appointmentId,
              newDateTime,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #rescheduleAppointment,
            [
              appointmentId,
              newDateTime,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<List<_i10.Appointment>>> fetchAppointments({
    String? doctorID,
    String? patientID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAppointments,
          [],
          {
            #doctorID: doctorID,
            #patientID: patientID,
          },
        ),
        returnValue: _i6.Future<_i2.Result<List<_i10.Appointment>>>.value(
            _FakeResult_0<List<_i10.Appointment>>(
          this,
          Invocation.method(
            #fetchAppointments,
            [],
            {
              #doctorID: doctorID,
              #patientID: patientID,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<List<_i10.Appointment>>>.value(
                _FakeResult_0<List<_i10.Appointment>>(
          this,
          Invocation.method(
            #fetchAppointments,
            [],
            {
              #doctorID: doctorID,
              #patientID: patientID,
            },
          ),
        )),
      ) as _i6.Future<_i2.Result<List<_i10.Appointment>>>);
}

/// A class which mocks [DoctorService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDoctorService extends _i1.Mock implements _i11.DoctorService {
  @override
  _i6.Future<_i2.Result<void>> createDoctor(_i12.Doctor? doctor) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDoctor,
          [doctor],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #createDoctor,
            [doctor],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #createDoctor,
            [doctor],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<_i12.Doctor>> getDoctor(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDoctor,
          [uid],
        ),
        returnValue: _i6.Future<_i2.Result<_i12.Doctor>>.value(
            _FakeResult_0<_i12.Doctor>(
          this,
          Invocation.method(
            #getDoctor,
            [uid],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.Result<_i12.Doctor>>.value(
            _FakeResult_0<_i12.Doctor>(
          this,
          Invocation.method(
            #getDoctor,
            [uid],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i12.Doctor>>);
  @override
  _i6.Future<_i2.Result<void>> updateDoctor(
    String? uid,
    _i12.Doctor? doctor,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDoctor,
          [
            uid,
            doctor,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #updateDoctor,
            [
              uid,
              doctor,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #updateDoctor,
            [
              uid,
              doctor,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<void>> deleteDoctor(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #deleteDoctor,
          [uid],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deleteDoctor,
            [uid],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deleteDoctor,
            [uid],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<List<_i12.Doctor>>> searchDoctorBySpeciality(
          String? speciality) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchDoctorBySpeciality,
          [speciality],
        ),
        returnValue: _i6.Future<_i2.Result<List<_i12.Doctor>>>.value(
            _FakeResult_0<List<_i12.Doctor>>(
          this,
          Invocation.method(
            #searchDoctorBySpeciality,
            [speciality],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<List<_i12.Doctor>>>.value(
                _FakeResult_0<List<_i12.Doctor>>(
          this,
          Invocation.method(
            #searchDoctorBySpeciality,
            [speciality],
          ),
        )),
      ) as _i6.Future<_i2.Result<List<_i12.Doctor>>>);
}

/// A class which mocks [PatientService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPatientService extends _i1.Mock implements _i13.PatientService {
  @override
  void setCurrentPatient(_i14.Patient? patient) => super.noSuchMethod(
        Invocation.method(
          #setCurrentPatient,
          [patient],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i2.Result<void>> createPatient(_i14.Patient? patient) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPatient,
          [patient],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #createPatient,
            [patient],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #createPatient,
            [patient],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<_i14.Patient>> getPatient(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPatient,
          [uid],
        ),
        returnValue: _i6.Future<_i2.Result<_i14.Patient>>.value(
            _FakeResult_0<_i14.Patient>(
          this,
          Invocation.method(
            #getPatient,
            [uid],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.Result<_i14.Patient>>.value(
            _FakeResult_0<_i14.Patient>(
          this,
          Invocation.method(
            #getPatient,
            [uid],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i14.Patient>>);
  @override
  _i6.Future<_i2.Result<void>> updatePatient(
    String? uid,
    _i14.Patient? patient,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePatient,
          [
            uid,
            patient,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #updatePatient,
            [
              uid,
              patient,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #updatePatient,
            [
              uid,
              patient,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
  @override
  _i6.Future<_i2.Result<void>> deletePatient(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePatient,
          [uid],
        ),
        returnValue: _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deletePatient,
            [uid],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deletePatient,
            [uid],
          ),
        )),
      ) as _i6.Future<_i2.Result<void>>);
}
